---
import type { Event } from '../data/events';

interface Props {
  event: Event;
}

const { event } = Astro.props;

const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    weekday: 'short',
    year: 'numeric',
    month: 'short',
    day: 'numeric',
  });
};

const formatTime = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleTimeString('en-US', {
    hour: 'numeric',
    minute: '2-digit',
    hour12: true,
  });
};
---

<article class="bg-white rounded-lg shadow-md hover:shadow-lg transition p-6">
  <div class="flex items-start gap-4">
    <div class="flex-shrink-0 bg-blue-100 rounded-lg p-3 text-center">
      <div class="text-2xl font-bold text-blue-900">
        {new Date(event.startDateTime).getDate()}
      </div>
      <div class="text-sm text-blue-700 uppercase">
        {new Date(event.startDateTime).toLocaleDateString('en-US', { month: 'short' })}
      </div>
    </div>

    <div class="flex-grow">
      <h3 class="text-xl font-bold text-gray-900 mb-2">
        <a href={`/events/${event.id}`} class="hover:text-blue-700 transition">
          {event.title}
        </a>
      </h3>

      <div class="flex items-center gap-2 text-sm text-gray-600 mb-3">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <span>{formatTime(event.startDateTime)} - {formatTime(event.endDateTime)}</span>
      </div>

      <div class="flex items-center gap-2 text-sm text-gray-600 mb-3">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
        <span>{event.location}</span>
      </div>

      <p class="text-gray-700 mb-4">{event.description}</p>

      <div class="flex items-center gap-3">
        <a
          href={`/events/${event.id}`}
          class="text-blue-600 hover:text-blue-800 font-medium text-sm"
        >
          Learn More â†’
        </a>
        {event.registrationLink && (
          <a
            href={event.registrationLink}
            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm font-medium transition"
          >
            Register
          </a>
        )}
      </div>
    </div>
  </div>
</article>
