---
import type { Prayer } from '../lib/directus';
import { getPrayerDisplayTitle } from '../lib/directus';

interface Props {
  prayer: Prayer;
  showFullText?: boolean;
}

const { prayer, showFullText = false } = Astro.props;

const truncateText = (text: string, maxLength: number = 200) => {
  if (text.length <= maxLength) return text;
  return text.slice(0, maxLength) + '...';
};

const displayTitle = getPrayerDisplayTitle(prayer);
---

<article class="bg-white rounded-lg shadow-md hover:shadow-lg transition p-6">
  <div class="mb-3">
    <h3 class="text-xl font-bold text-gray-900 mb-1">
      <a href={`/devotional/prayers/${prayer.id}`} class="hover:text-blue-700 transition">
        {displayTitle}
      </a>
    </h3>
    <p class="text-sm text-gray-600">{prayer.category}</p>
  </div>

  <div class="text-gray-700 italic leading-relaxed mb-4">
    {showFullText ? (
      <p class="whitespace-pre-line">{prayer.text}</p>
    ) : (
      <p>{truncateText(prayer.text)}</p>
    )}
  </div>

  {!showFullText && (
    <a
      href={`/devotional/prayers/${prayer.id}`}
      class="text-blue-600 hover:text-blue-800 font-medium text-sm inline-flex items-center gap-1"
    >
      Read Full Prayer
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  )}

  {prayer.tags && prayer.tags.length > 0 && (
    <div class="mt-4 pt-4 border-t border-gray-200">
      <div class="flex flex-wrap gap-2">
        {prayer.tags.map((tag) => (
          <span class="text-xs text-gray-600 bg-gray-100 px-2 py-1 rounded">
            #{tag}
          </span>
        ))}
      </div>
    </div>
  )}
</article>
